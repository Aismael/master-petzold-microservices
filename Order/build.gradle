group 'How-To-Microservice-Spring-Boot'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE")

    }
}

//MYSQL on Docker
//docker run -d -p 3306:3306 --name demo-mysql -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=demo -e MYSQL_USER=demo_user -e MYSQL_PASSWORD=demo_pass -d mysql:5.6

apply plugin: 'groovy'
//apply plugin: 'war'
apply plugin: 'eclipse'
//apply plugin: 'idea'
//apply plugin: 'application'
//apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'java'


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets {
    main {
        groovy {
            srcDirs = ['src/groovy']
        }
        java {
            srcDirs = ['src/java']
        }
    }

    

    test {
        groovy {
            srcDirs = ['test/groovy']
        }
        java {
            srcDirs = ['test/java']
        }
    }
}

jar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}



springBoot {
    mainClass = "Order.Application"
}
bootRepackage {
    mainClass = 'Order.Application'
}




dependencies {

    compile 'org.codehaus.groovy:groovy-all'
    compile ('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1')

    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-websocket")
    //compile("org.springframework.boot:spring-boot-starter-actuator")
    //compile("org.springframework.boot:spring-boot-starter-web")
    //compile("org.springframework.boot:spring-boot")
    //compile("org.springframework.boot:spring-boot-starter-jetty")
    //compile("org.springframework.boot:spring-boot-starter-logging")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    //compile "org.springframework.boot:spring-boot-starter-tomcat"
    // end::jetty[]
    // tag::actuator[]
    // end::actuator[]
    runtime("mysql:mysql-connector-java")
    compile project(':associations')
    //compile("org.webjars:webjars-locator")
    //compile("org.webjars:sockjs-client:1.0.2")
    //compile("org.webjars:stomp-websocket:2.3.3")
    //compile("org.webjars:bootstrap:3.3.7")
    //compile("org.webjars:jquery:3.1.0")



}



/**
 * Method to Copy built jar file and Rename it for easy
 * Docker-Deployment independent from Versioning
 * at build-process
 */
task copyToDockerDeploy << {
    task copyJarToBin {
        copy {
            from jar.getArchivePath()
            into 'src/main/docker'
            rename {String fileName ->
                fileName.replace(jar.getArchivePath().getName(), "SpringBootDocker.jar")
            }
        }

    }
}

build.finalizedBy(copyToDockerDeploy)

/** Docker compose ui
 * ui:
    container_name: UI
    image: uifd/ui-for-docker
    privileged: true
    ports:
     - 9000:9000
    volumes:
     - /var/run/docker.sock:/../../var/run/docker.sock
 */

